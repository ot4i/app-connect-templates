$integration: 'http://ibm.com/appconnect/integration/v2/integrationFile'
integration:
  type: api
  trigger-interfaces:
    trigger-interface-1:
      triggers:
        retrieveallRepository:
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          input-context:
            data: repository
          output-context:
            data: repository
      options:
        resources:
          - business-object: repository
            model:
              $ref: '#/models/repository'
            triggers:
              retrieveall: retrieveallRepository
      type: api-trigger
  action-interfaces:
    action-interface-3:
      type: api-action
      business-object: request
      connector-type: http
      account-name: Account 1
      actions:
        INVOKE: {}
    action-interface-1:
      type: api-action
      business-object: mail
      connector-type: gmail
      account-name: Account 1
      actions:
        CREATE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - custom-action:
              name: HTTP Invoke method
              target:
                $ref: '#/integration/action-interfaces/action-interface-3'
              action: INVOKE
              map:
                mappings:
                  - method:
                      template: GET
                  - url:
                      template: >-
                        https://api.bitbucket.org/2.0/repositories?pagelen={{$api.limit}}&after={{$api.token}}
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: api
                    $ref: '#/trigger/api/parameters'
          - parse:
              name: JSON Parser Parse
              parse-format: json
              source:
                template: '{{$HTTPInvokemethod.responseBody}}'
                input:
                  - variable: api
                    $ref: '#/trigger/api/parameters'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
              sample-data: >-
                {"pagelen": 5, "values": [{"scm": "hg", "website": "",
                "has_wiki": true, "name": "tweakmsg", "links": {"watchers":
                {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg/watchers"},
                "branches": {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg/refs/branches"},
                "tags": {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg/refs/tags"},
                "commits": {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg/commits"},
                "clone": [{"href":
                "https://bitbucket.org/phlogistonjohn/tweakmsg", "name":
                "https"}, {"href":
                "ssh://hg@bitbucket.org/phlogistonjohn/tweakmsg", "name":
                "ssh"}], "self": {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg"},
                "source": {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg/src"},
                "html": {"href":
                "https://bitbucket.org/phlogistonjohn/tweakmsg"}, "avatar":
                {"href":
                "https://bytebucket.org/ravatar/%7B59299fb9-3695-4e0c-b8ca-836888b83315%7D?ts=default"},
                "hooks": {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg/hooks"},
                "forks": {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg/forks"},
                "downloads": {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg/downloads"},
                "issues": {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg/issues"},
                "pullrequests": {"href":
                "https://api.bitbucket.org/2.0/repositories/phlogistonjohn/tweakmsg/pullrequests"}},
                "fork_policy": "allow_forks", "uuid":
                "{59299fb9-3695-4e0c-b8ca-836888b83315}", "language": "",
                "created_on": "2008-06-25T00:53:00.273366+00:00", "mainbranch":
                {"type": "named_branch", "name": "default"}, "full_name":
                "phlogistonjohn/tweakmsg", "has_issues": true, "owner":
                {"username": "phlogistonjohn", "display_name": "John Mulligan",
                "account_id": "557058:8ffe6a8c-8424-4156-9786-0102572cf345",
                "links": {"self": {"href":
                "https://api.bitbucket.org/2.0/users/phlogistonjohn"}, "html":
                {"href": "https://bitbucket.org/phlogistonjohn/"}, "avatar":
                {"href":
                "https://bitbucket.org/account/phlogistonjohn/avatar/"}},
                "type": "user", "uuid":
                "{c8614bfa-831a-49eb-866b-4bdd87c8c2c2}"}, "updated_on":
                "2012-06-24T17:32:27.458855+00:00", "size": 7085, "type":
                "repository", "slug": "tweakmsg", "is_private": false,
                "description": "Mercurial (hg) extension to allow commenting on
                commit messages.  Mainly written for practice reading & working
                with mercurial internals.\r\n"}, {"scm": "hg", "website": "",
                "has_wiki": true, "name": "new", "links": {"watchers": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new/watchers"},
                "branches": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new/refs/branches"},
                "tags": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new/refs/tags"},
                "commits": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new/commits"},
                "clone": [{"href": "https://bitbucket.org/ape_hand/new", "name":
                "https"}, {"href": "ssh://hg@bitbucket.org/ape_hand/new",
                "name": "ssh"}], "self": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new"},
                "source": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new/src"},
                "html": {"href": "https://bitbucket.org/ape_hand/new"},
                "avatar": {"href":
                "https://bytebucket.org/ravatar/%7Bf9e67cd7-438e-43af-b232-d3ac875e7a66%7D?ts=default"},
                "hooks": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new/hooks"},
                "forks": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new/forks"},
                "downloads": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new/downloads"},
                "issues": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new/issues"},
                "pullrequests": {"href":
                "https://api.bitbucket.org/2.0/repositories/ape_hand/new/pullrequests"}},
                "fork_policy": "allow_forks", "uuid":
                "{f9e67cd7-438e-43af-b232-d3ac875e7a66}", "language": "",
                "created_on": "2008-06-25T11:56:52.174489+00:00", "mainbranch":
                null, "full_name": "ape_hand/new", "has_issues": true, "owner":
                {"username": "ape_hand", "display_name": "dru mestre",
                "account_id": null, "links": {"self": {"href":
                "https://api.bitbucket.org/2.0/users/ape_hand"}, "html":
                {"href": "https://bitbucket.org/ape_hand/"}, "avatar": {"href":
                "https://bitbucket.org/account/ape_hand/avatar/"}}, "type":
                "user", "uuid": "{44c44df8-fc76-4ad2-850a-514067c11ee1}"},
                "updated_on": "2012-06-24T17:34:03.538784+00:00", "size": 3091,
                "type": "repository", "slug": "new", "is_private": false,
                "description": "new stuff"}, {"scm": "hg", "website":
                "http://stellaris.zib.de/", "has_wiki": true, "name":
                "stellaris", "links": {"watchers": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris/watchers"},
                "branches": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris/refs/branches"},
                "tags": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris/refs/tags"},
                "commits": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris/commits"},
                "clone": [{"href": "https://bitbucket.org/mikael/stellaris",
                "name": "https"}, {"href":
                "ssh://hg@bitbucket.org/mikael/stellaris", "name": "ssh"}],
                "self": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris"},
                "source": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris/src"},
                "html": {"href": "https://bitbucket.org/mikael/stellaris"},
                "avatar": {"href":
                "https://bytebucket.org/ravatar/%7Be8daff2a-ceaf-465d-bb87-113a85daaea5%7D?ts=default"},
                "hooks": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris/hooks"},
                "forks": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris/forks"},
                "downloads": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris/downloads"},
                "issues": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris/issues"},
                "pullrequests": {"href":
                "https://api.bitbucket.org/2.0/repositories/mikael/stellaris/pullrequests"}},
                "fork_policy": "allow_forks", "uuid":
                "{e8daff2a-ceaf-465d-bb87-113a85daaea5}", "language": "",
                "created_on": "2008-07-02T20:31:45.240046+00:00", "mainbranch":
                null, "full_name": "mikael/stellaris", "has_issues": true,
                "owner": {"username": "mikael", "display_name": "Mikael
                Högqvist", "account_id": null, "links": {"self": {"href":
                "https://api.bitbucket.org/2.0/users/mikael"}, "html": {"href":
                "https://bitbucket.org/mikael/"}, "avatar": {"href":
                "https://bitbucket.org/account/mikael/avatar/"}}, "type":
                "user", "uuid": "{d7d79101-e359-4d1f-ae9a-28c94ee4e5d3}"},
                "updated_on": "2012-06-24T17:36:12.810769+00:00", "size": 3109,
                "type": "repository", "slug": "stellaris", "is_private": false,
                "description": "REST-frontend for RDF-databases"}, {"scm": "hg",
                "website": "http://libdodo.org/", "has_wiki": false, "name":
                "libdodo", "links": {"watchers": {"href":
                "https://api.bitbucket.org/2.0/repositories/Niam/libdodo/watchers"},
                "branches": {"href":
                "https://api.bitbucket.org/2.0/repositories/Niam/libdodo/refs/branches"},
                "tags": {"href":
                "https://api.bitbucket.org/2.0/repositories/Niam/libdodo/refs/tags"},
                "commits": {"href":
                "https://api.bitbucket.org/2.0/repositories/Niam/libdodo/commits"},
                "clone": [{"href": "https://bitbucket.org/Niam/libdodo", "name":
                "https"}, {"href": "ssh://hg@bitbucket.org/Niam/libdodo",
                "name": "ssh"}], "self": {"href":
                "https://api.bitbucket.org/2.0/repositories/Niam/libdodo"},
                "source": {"href":
                "https://api.bitbucket.org/2.0/repositories/Niam/libdodo/src"},
                "html": {"href": "https://bitbucket.org/Niam/libdodo"},
                "avatar": {"href":
                "https://bytebucket.org/ravatar/%7B730c8c86-9dcd-4c45-be63-0bef6d4910c4%7D?ts=549"},
                "hooks": {"href":
                "https://api.bitbucket.org/2.0/repositories/Niam/libdodo/hooks"},
                "forks": {"href":
                "https://api.bitbucket.org/2.0/repositories/Niam/libdodo/forks"},
                "downloads": {"href":
                "https://api.bitbucket.org/2.0/repositories/Niam/libdodo/downloads"},
                "pullrequests": {"href":
                "https://api.bitbucket.org/2.0/repositories/Niam/libdodo/pullrequests"}},
                "fork_policy": "allow_forks", "uuid":
                "{730c8c86-9dcd-4c45-be63-0bef6d4910c4}", "language": "",
                "created_on": "2008-07-04T09:51:46.813635+00:00", "mainbranch":
                {"type": "named_branch", "name": "default"}, "full_name":
                "Niam/libdodo", "has_issues": false, "owner": {"username":
                "Niam", "display_name": "Niam", "account_id": null, "links":
                {"self": {"href": "https://api.bitbucket.org/2.0/users/Niam"},
                "html": {"href": "https://bitbucket.org/Niam/"}, "avatar":
                {"href": "https://bitbucket.org/account/Niam/avatar/"}}, "type":
                "user", "uuid": "{75a87e40-667d-411c-a52b-93d97dc20d9b}"},
                "updated_on": "2012-06-24T17:36:45.602876+00:00", "size":
                60253399, "type": "repository", "slug": "libdodo", "is_private":
                false, "description": "libdodo is not a web framework but a
                toolkit(middle-level library) for building fast and scalable web
                applications easy.\r\n\r\nBuilding web sites is not a main goal
                of libdodo. One of its purposes is to develop big and complex
                systems under high load that require good stability on one hand
                and small and fast applications for embedded world on another
                hand.\r\n\r\nlibdodo provides database abstraction, easy use of
                parallel computation, content parsing and generation, much more
                and of course interaction with users via
                webserver.\r\n\r\nReview documentation section to understand
                what libdodo is and how it could be used.\r\n\r\nlibdodo is
                written in c++ to provide high performance and small
                footprint.\r\n\r\nIt is licensed under LGPL 2.1. "}, {"scm":
                "hg", "website": "http://noehr.org/", "has_wiki": true, "name":
                "cx", "links": {"watchers": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx/watchers"},
                "branches": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx/refs/branches"},
                "tags": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx/refs/tags"},
                "commits": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx/commits"},
                "clone": [{"href": "https://bitbucket.org/jespern/cx", "name":
                "https"}, {"href": "ssh://hg@bitbucket.org/jespern/cx", "name":
                "ssh"}], "self": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx"},
                "source": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx/src"},
                "html": {"href": "https://bitbucket.org/jespern/cx"}, "avatar":
                {"href":
                "https://bytebucket.org/ravatar/%7Bf6e56460-f4c1-4c54-9377-c7932b3d48cf%7D?ts=68"},
                "hooks": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx/hooks"},
                "forks": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx/forks"},
                "downloads": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx/downloads"},
                "issues": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx/issues"},
                "pullrequests": {"href":
                "https://api.bitbucket.org/2.0/repositories/jespern/cx/pullrequests"}},
                "fork_policy": "allow_forks", "uuid":
                "{f6e56460-f4c1-4c54-9377-c7932b3d48cf}", "language": "",
                "created_on": "2008-07-07T13:59:28.914048+00:00", "mainbranch":
                {"type": "named_branch", "name": "default"}, "full_name":
                "jespern/cx", "has_issues": true, "owner": {"username":
                "jespern", "display_name": "Jesper Noehr", "account_id":
                "557058:a10145be-a5a5-43cc-8185-e2ead926aed3", "links": {"self":
                {"href": "https://api.bitbucket.org/2.0/users/jespern"}, "html":
                {"href": "https://bitbucket.org/jespern/"}, "avatar": {"href":
                "https://bitbucket.org/account/jespern/avatar/"}}, "type":
                "user", "uuid": "{9feecef2-b002-491c-a820-f1b33b737c76}"},
                "updated_on": "2011-09-17T03:14:11.884090+00:00", "size":
                1129999, "type": "repository", "slug": "cx", "is_private":
                false, "description": "Simple blog in Django, used on
                http://noehr.org/ and http://cx.dirtyhack.org/. Licensed under
                GPLv2."}], "next":
                "https://api.bitbucket.org/2.0/repositories?pagelen=5&after=2008-07-07T19%3A22%3A21.403996%2B00%3A00"}
              output-schema:
                $schema: 'http://json-schema.org/draft-04/schema#'
                type: object
                properties:
                  pagelen:
                    type: number
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        scm:
                          type: string
                        website:
                          type: string
                        has_wiki:
                          type: boolean
                        name:
                          type: string
                        links:
                          type: object
                          properties:
                            watchers:
                              type: object
                              properties:
                                href:
                                  type: string
                            branches:
                              type: object
                              properties:
                                href:
                                  type: string
                            tags:
                              type: object
                              properties:
                                href:
                                  type: string
                            commits:
                              type: object
                              properties:
                                href:
                                  type: string
                            clone:
                              type: array
                              items:
                                type: object
                                properties:
                                  href:
                                    type: string
                                  name:
                                    type: string
                            self:
                              type: object
                              properties:
                                href:
                                  type: string
                            source:
                              type: object
                              properties:
                                href:
                                  type: string
                            html:
                              type: object
                              properties:
                                href:
                                  type: string
                            avatar:
                              type: object
                              properties:
                                href:
                                  type: string
                            hooks:
                              type: object
                              properties:
                                href:
                                  type: string
                            forks:
                              type: object
                              properties:
                                href:
                                  type: string
                            downloads:
                              type: object
                              properties:
                                href:
                                  type: string
                            issues:
                              type: object
                              properties:
                                href:
                                  type: string
                            pullrequests:
                              type: object
                              properties:
                                href:
                                  type: string
                        fork_policy:
                          type: string
                        uuid:
                          type: string
                        language:
                          type: string
                        created_on:
                          type: string
                        mainbranch:
                          type: object
                          properties:
                            type:
                              type: string
                            name:
                              type: string
                        full_name:
                          type: string
                        has_issues:
                          type: boolean
                        owner:
                          type: object
                          properties:
                            username:
                              type: string
                            display_name:
                              type: string
                            account_id:
                              type: string
                            links:
                              type: object
                              properties:
                                self:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                html:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                avatar:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                            type:
                              type: string
                            uuid:
                              type: string
                        updated_on:
                          type: string
                        size:
                          type: number
                        type:
                          type: string
                        slug:
                          type: string
                        is_private:
                          type: boolean
                        description:
                          type: string
                  next:
                    type: string
                title: Parsed JSON
          - for-each:
              name: For each
              assembly:
                $ref: '#/integration/assemblies/assembly-2'
              source:
                expression: '$JSONParserParse.values '
                input:
                  - variable: api
                    $ref: '#/trigger/api/parameters'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
              mode: parallel
              continue-on-error: true
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: api
                    $ref: '#/trigger/api/parameters'
                  - variable: If
                    $ref: '#/block/For each/node-output/If/response/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                customSchemas:
                  properties.`output`:
                    type: object
                    properties:
                      name:
                        type: string
                      full_name:
                        type: string
                      uuid:
                        type: string
                      ownerId:
                        type: string
                mappings:
                  - output:
                      mappings:
                        - full_name:
                            template: '{{$If.full_name}}'
                        - name:
                            template: '{{$If.name}}'
                        - ownerId:
                            template: '{{$If.ownerId}}'
                        - uuid:
                            template: '{{$If.uuid}}'
              display-name: JSON Parser Object
          - response:
              name: response-1
              reply-maps:
                - title: repository successfully retrieved
                  status-code: '200'
                  map:
                    $map: 'http://ibm.com/appconnect/map/v1'
                    input:
                      - variable: api
                        $ref: '#/trigger/api/parameters'
                      - variable: HTTPInvokemethod
                        $ref: '#/node-output/HTTP Invoke method/response/payload'
                      - variable: HTTPInvokemethodMetadata
                        $ref: '#/node-output/HTTP Invoke method/response'
                      - variable: JSONParserParse
                        $ref: '#/node-output/JSON Parser Parse/response/payload'
                      - variable: Foreach
                        $ref: '#/node-output/For each/response/payload'
                    mappings:
                      - next:
                          mappings:
                            - limit:
                                expression: '$api.limit '
                            - next_page_token:
                                template: >-
                                  {{$substringAfter($JSONParserParse.next ,
                                  "&after=")}}
                      - repository:
                          foreach:
                            input: '$Foreach '
                            iterator: repositoryItem
                            mappings:
                              - full_name:
                                  template: '{{$repositoryItem.output.full_name}}'
                              - name:
                                  template: '{{$repositoryItem.output.name}}'
                              - uuid:
                                  template: '{{$repositoryItem.output.uuid}}'
                  input:
                    - variable: api
                      $ref: '#/trigger/api/parameters'
                    - variable: HTTPInvokemethod
                      $ref: '#/node-output/HTTP Invoke method/response/payload'
                    - variable: HTTPInvokemethodMetadata
                      $ref: '#/node-output/HTTP Invoke method/response'
                    - variable: JSONParserParse
                      $ref: '#/node-output/JSON Parser Parse/response/payload'
                    - variable: Foreach
                      $ref: '#/node-output/For each/response/payload'
    assembly-2:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Foreachitem
                  $ref: '#/block/For each/current-item'
                - variable: api
                  $ref: '#/trigger/api/parameters'
                - variable: HTTPInvokemethod
                  $ref: '#/node-output/HTTP Invoke method/response/payload'
                - variable: HTTPInvokemethodMetadata
                  $ref: '#/node-output/HTTP Invoke method/response'
                - variable: JSONParserParse
                  $ref: '#/node-output/JSON Parser Parse/response/payload'
              branch:
                - condition:
                    '{{$toMillis($Foreachitem.updated_on )}}':
                      lte: '{{$toMillis("2012-06-24T13:32:27.458855+00:00")}}'
                  execute:
                    - create-action:
                        name: Gmail Create email
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-1'
                        map:
                          mappings:
                            - Body:
                                template: >-
                                  Repository {{$Foreachitem.name}} has not been
                                  updated since {{$Foreachitem.updated_on}}.

                                  Please archive this repository if it's no
                                  longer being updated or used.
                            - Subject:
                                template: >-
                                  {{$Foreachitem.owner.username}} has an
                                  inactive repository named:
                                  {{$Foreachitem.name}}
                            - To:
                                template: abc@gmail.com
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: api
                              $ref: '#/trigger/api/parameters'
                            - variable: HTTPInvokemethod
                              $ref: >-
                                #/node-output/HTTP Invoke
                                method/response/payload
                            - variable: HTTPInvokemethodMetadata
                              $ref: '#/node-output/HTTP Invoke method/response'
                            - variable: JSONParserParse
                              $ref: '#/node-output/JSON Parser Parse/response/payload'
                  map:
                    $map: 'http://ibm.com/appconnect/map/v1'
                    input:
                      - variable: Foreachitem
                        $ref: '#/block/For each/current-item'
                      - variable: api
                        $ref: '#/trigger/api/parameters'
                      - variable: GmailCreateemail
                        $ref: >-
                          #/block/If/node-output/Gmail Create
                          email/response/payload
                      - variable: HTTPInvokemethod
                        $ref: '#/node-output/HTTP Invoke method/response/payload'
                      - variable: HTTPInvokemethodMetadata
                        $ref: '#/node-output/HTTP Invoke method/response'
                      - variable: JSONParserParse
                        $ref: '#/node-output/JSON Parser Parse/response/payload'
                    mappings:
                      - full_name:
                          template: '{{$Foreachitem.full_name}}'
                      - name:
                          template: '{{$Foreachitem.name}}'
                      - ownerId:
                          template: '{{$Foreachitem.owner.account_id}}'
                      - uuid:
                          template: '{{$Foreachitem.uuid}}'
              else:
                execute: []
              output-schema:
                required: []
                properties:
                  name:
                    type: string
                    title: name
                  full_name:
                    type: string
                    title: full_name
                  uuid:
                    type: string
                    title: uuid
                  ownerId:
                    type: string
                    title: ownerId
                title: Output Schema
                type: object
  name: >-
    API to retrieve source code repository details and send an email about inactive repositories
models:
  repository:
    name: repository
    properties:
      uuid:
        required: false
        id: true
        type: string
      name:
        required: false
        id: false
        type: string
      full_name:
        required: false
        id: false
        type: string
    plural: repository
    description: ' '
    operations:
      retrieveall: '#/integration/assemblies/assembly-1'
    interactions:
      retrieveall:
        pagination-type: TOKEN_LIMIT
        filterSupport:
          queryablefields: []
        isVisible: true
