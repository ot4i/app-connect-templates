$integration: http://ibm.com/appconnect/integration/v2/integrationFile
integration:
  type: api
  trigger-interfaces:
    trigger-interface-1:
      triggers:
        retrieveallEmployee1:
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          input-context:
            data: Employee1
          output-context:
            data: Employee1
      options:
        resources:
          - business-object: Employee1
            model:
              $ref: '#/models/Employee1'
            triggers:
              retrieveall: retrieveallEmployee1
      type: api-trigger
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: item
      connector-type: amazondynamodb
      actions:
        RETRIEVEALL: {}
    action-interface-3:
      type: api-action
      business-object: message
      connector-type: slack
      actions:
        CREATE: {}
    action-interface-2:
      type: api-action
      business-object: emp3
      connector-type: googlebigquery
      actions:
        RETRIEVEALL: {}
    action-interface-4:
      type: api-action
      business-object: emp3
      connector-type: googlebigquery
      actions:
        INSERTTABLEDATA: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - retrieve-action:
              name: Amazon DynamoDB Retrieve items
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              filter:
                where:
                  TableName: Adittest
                input: []
                limit: 10
              allow-truncation: true
              pagination-type: TOKEN
              allow-empty-output: true
          - for-each:
              name: For each 2
              assembly:
                $ref: '#/integration/assemblies/assembly-3'
              source:
                expression: '$AmazonDynamoDBRetrieveitems '
                input:
                  - variable: AmazonDynamoDBRetrieveitems
                    $ref: >-
                      #/node-output/Amazon DynamoDB Retrieve
                      items/response/payload
                  - variable: AmazonDynamoDBRetrieveitemsMetadata
                    $ref: '#/node-output/Amazon DynamoDB Retrieve items/response'
              mode: sequential
              continue-on-error: true
              map:
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: GoogleCloudBigQueryRetrieveemp3records
                    $ref: >-
                      #/block/For each 2/node-output/Google Cloud BigQuery
                      Retrieve emp3 records/response/payload
                  - variable: GoogleCloudBigQueryRetrieveemp3recordsMetadata
                    $ref: >-
                      #/block/For each 2/node-output/Google Cloud BigQuery
                      Retrieve emp3 records/response
                  - variable: AmazonDynamoDBRetrieveitems
                    $ref: >-
                      #/node-output/Amazon DynamoDB Retrieve
                      items/response/payload
                  - variable: AmazonDynamoDBRetrieveitemsMetadata
                    $ref: '#/node-output/Amazon DynamoDB Retrieve items/response'
                mappings: []
              display-name: Amazon DynamoDB item
          - response:
              name: response-1
              reply-maps:
                - title: Employee1 successfully retrieved
                  status-code: '200'
                  map:
                    $map: http://ibm.com/appconnect/map/v1
                    input:
                      - variable: AmazonDynamoDBRetrieveitems
                        $ref: >-
                          #/node-output/Amazon DynamoDB Retrieve
                          items/response/payload
                      - variable: AmazonDynamoDBRetrieveitemsMetadata
                        $ref: '#/node-output/Amazon DynamoDB Retrieve items/response'
                      - variable: Foreach2
                        $ref: '#/node-output/For each 2/response/payload'
                    mappings:
                      - Employee1:
                          foreach:
                            input: '[]'
                            iterator: Employee1Item
                            mappings:
                              - retrieveEmployees:
                                  template: '{{$Foreach2.output}}'
                  input:
                    - variable: AmazonDynamoDBRetrieveitems
                      $ref: >-
                        #/node-output/Amazon DynamoDB Retrieve
                        items/response/payload
                    - variable: AmazonDynamoDBRetrieveitemsMetadata
                      $ref: '#/node-output/Amazon DynamoDB Retrieve items/response'
                    - variable: Foreach2
                      $ref: '#/node-output/For each 2/response/payload'
        tags:
          - incomplete
    assembly-3:
      assembly:
        execute:
          - retrieve-action:
              name: Google Cloud BigQuery Retrieve emp3 records
              target:
                $ref: '#/integration/action-interfaces/action-interface-2'
              filter:
                where:
                  empid: '{{$Foreach2item.id}}'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: AmazonDynamoDBRetrieveitems
                    $ref: >-
                      #/node-output/Amazon DynamoDB Retrieve
                      items/response/payload
                  - variable: AmazonDynamoDBRetrieveitemsMetadata
                    $ref: '#/node-output/Amazon DynamoDB Retrieve items/response'
                limit: 10
              allow-truncation: true
              pagination-type: SKIP_LIMIT
              allow-empty-output: true
          - if:
              name: If
              input:
                - variable: Foreach2item
                  $ref: '#/block/For each 2/current-item'
                - variable: flowDetails
                  $ref: '#/flowDetails'
              branch:
                - condition:
                    '{{$GoogleCloudBigQueryRetrieveemp3recordsMetadata."status-code"}}': '204'
                  execute:
                    - custom-action:
                        name: Google Cloud BigQuery Insert emp3 record
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-4'
                        action: INSERTTABLEDATA
                        map:
                          mappings:
                            - empid:
                                expression: '$Foreach2item.id '
                            - fname:
                                template: '{{$Foreach2item.data.Fname}}'
                            - lname:
                                template: '{{$Foreach2item.data.Lname}}'
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Foreach2item
                              $ref: '#/block/For each 2/current-item'
                            - variable: GoogleCloudBigQueryRetrieveemp3records
                              $ref: >-
                                #/block/For each 2/node-output/Google Cloud
                                BigQuery Retrieve emp3 records/response/payload
                            - variable: GoogleCloudBigQueryRetrieveemp3recordsMetadata
                              $ref: >-
                                #/block/For each 2/node-output/Google Cloud
                                BigQuery Retrieve emp3 records/response
                            - variable: AmazonDynamoDBRetrieveitems
                              $ref: >-
                                #/node-output/Amazon DynamoDB Retrieve
                                items/response/payload
                            - variable: AmazonDynamoDBRetrieveitemsMetadata
                              $ref: >-
                                #/node-output/Amazon DynamoDB Retrieve
                                items/response
              else:
                execute:
                  - create-action:
                      name: Slack Create message
                      target:
                        $ref: '#/integration/action-interfaces/action-interface-3'
                      map:
                        mappings:
                          - channel:
                              template: C2CQPCER0
                          - text:
                              template: >-
                                record already exists
                                {{$GoogleCloudBigQueryRetrieveemp3records}}
                        $map: http://ibm.com/appconnect/map/v1
                        input:
                          - variable: Foreach2item
                            $ref: '#/block/For each 2/current-item'
                          - variable: GoogleCloudBigQueryRetrieveemp3records
                            $ref: >-
                              #/block/For each 2/node-output/Google Cloud
                              BigQuery Retrieve emp3 records/response/payload
                          - variable: GoogleCloudBigQueryRetrieveemp3recordsMetadata
                            $ref: >-
                              #/block/For each 2/node-output/Google Cloud
                              BigQuery Retrieve emp3 records/response
                          - variable: AmazonDynamoDBRetrieveitems
                            $ref: >-
                              #/node-output/Amazon DynamoDB Retrieve
                              items/response/payload
                          - variable: AmazonDynamoDBRetrieveitemsMetadata
                            $ref: >-
                              #/node-output/Amazon DynamoDB Retrieve
                              items/response
              output-schema: {}
  name: Synchronize data between Amazon DynamoDB and Google Big Query
  description: Use this template to retrieve employee records from Amazon DynamoDB and synchronise that data with Google Cloud BigQuery.
models:
  Employee1:
    name: Employee1
    properties:
      retrieveEmployees:
        required: false
        id: true
        type: string
    plural: Employee1
    description: ' '
    operations:
      retrieveall: '#/integration/assemblies/assembly-1'
    interactions:
      retrieveall:
        pagination-type: none
        filterSupport:
          queryablefields: []
