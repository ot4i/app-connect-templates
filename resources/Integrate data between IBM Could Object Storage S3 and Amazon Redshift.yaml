$integration: http://ibm.com/appconnect/integration/v2/integrationFile
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      type: event-trigger
      triggers:
        SCHEDULE:
          input-context:
            data: scheduler
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              scheduleConfiguration:
                interval:
                  unit: minute
                  value: 2
                  runOnceOncheck: true
                  days:
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
                    - SUN
                  timeZone: UTC
      connector-type: streaming-connector-scheduler
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: object
      connector-type: ibmcoss3
      actions:
        RETRIEVEALL: {}
    action-interface-3:
      type: api-action
      business-object: mail
      connector-type: gmail
      actions:
        CREATE: {}
    action-interface-4:
      type: api-action
      business-object: object
      connector-type: ibmcoss3
      actions:
        DOWNLOAD_OBJECT: {}
    action-interface-6:
      type: api-action
      business-object: mail
      connector-type: gmail
      actions:
        CREATE: {}
    action-interface-2:
      type: api-action
      business-object: appconnect_ibmevents
      connector-type: amazonredshift
      actions:
        UPSERTWITHWHERE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - retrieve-action:
              name: IBM Cloud Object Storage S3 Retrieve objects
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              filter:
                where:
                  bucketName: usecaseredshift
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
                limit: 10
              allow-truncation: true
              pagination-type: TOKEN
              allow-empty-output: true
          - for-each:
              name: For each
              assembly:
                $ref: '#/integration/assemblies/assembly-2'
              source:
                expression: $IBMCloudObjectStorageS3Retrieveobjects
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: IBMCloudObjectStorageS3Retrieveobjects
                    $ref: >-
                      #/node-output/IBM Cloud Object Storage S3 Retrieve
                      objects/response/payload
                  - variable: IBMCloudObjectStorageS3RetrieveobjectsMetadata
                    $ref: >-
                      #/node-output/IBM Cloud Object Storage S3 Retrieve
                      objects/response
                  - variable: flowDetails
                    $ref: '#/flowDetails'
              mode: sequential
              continue-on-error: true
              map:
                $map: http://ibm.com/appconnect/map/v1
                customSchemas: {}
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: IBMCloudObjectStorageS3Downloadobject
                    $ref: >-
                      #/block/For each/node-output/IBM Cloud Object Storage S3
                      Download object/response/payload
                  - variable: AmazonRedshiftCreatecustomersrecord
                    $ref: >-
                      #/block/For each/node-output/Amazon Redshift Create
                      customers record/response/payload
                  - variable: GmailSendemail2
                    $ref: >-
                      #/block/For each/node-output/Gmail Send email
                      2/response/payload
                  - variable: IBMCloudObjectStorageS3Retrieveobjects
                    $ref: >-
                      #/node-output/IBM Cloud Object Storage S3 Retrieve
                      objects/response/payload
                  - variable: IBMCloudObjectStorageS3RetrieveobjectsMetadata
                    $ref: >-
                      #/node-output/IBM Cloud Object Storage S3 Retrieve
                      objects/response
                  - variable: flowDetails
                    $ref: '#/flowDetails'
                mappings: []
              display-name: For each object from coss3
          - create-action:
              name: Gmail Send email
              target:
                $ref: '#/integration/action-interfaces/action-interface-3'
              map:
                mappings:
                  - Subject:
                      template: Events migration from COSS3 to Amazon Redshift
                  - To:
                      template: kamakshi@abc.com
                  - richTextBody:
                      mappings:
                        - content:
                            template: The events are moved
                        - contentType:
                            template: text/plain
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: IBMCloudObjectStorageS3Retrieveobjects
                    $ref: >-
                      #/node-output/IBM Cloud Object Storage S3 Retrieve
                      objects/response/payload
                  - variable: IBMCloudObjectStorageS3RetrieveobjectsMetadata
                    $ref: >-
                      #/node-output/IBM Cloud Object Storage S3 Retrieve
                      objects/response
                  - variable: Foreach
                    $ref: '#/node-output/For each/response/payload'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
    assembly-2:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Foreachitem
                  $ref: '#/block/For each/current-item'
                - variable: Trigger
                  $ref: '#/trigger/payload'
                - variable: IBMCloudObjectStorageS3Retrieveobjects
                  $ref: >-
                    #/node-output/IBM Cloud Object Storage S3 Retrieve
                    objects/response/payload
                - variable: IBMCloudObjectStorageS3RetrieveobjectsMetadata
                  $ref: >-
                    #/node-output/IBM Cloud Object Storage S3 Retrieve
                    objects/response
                - variable: flowDetails
                  $ref: '#/flowDetails'
              branch:
                - condition:
                    '{{$Foreachitem.LastModified}}':
                      gt: '{{$Trigger.lastEventTime}}'
                  execute:
                    - custom-action:
                        name: IBM Cloud Object Storage S3 Download object 2
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-4'
                        action: DOWNLOAD_OBJECT
                        map:
                          mappings:
                            - Key:
                                template: '{{$Foreachitem.Key}}'
                            - bucketName:
                                template: usecaseredshift
                            - type:
                                template: text
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: IBMCloudObjectStorageS3Retrieveobjects
                              $ref: >-
                                #/node-output/IBM Cloud Object Storage S3
                                Retrieve objects/response/payload
                            - variable: IBMCloudObjectStorageS3RetrieveobjectsMetadata
                              $ref: >-
                                #/node-output/IBM Cloud Object Storage S3
                                Retrieve objects/response
                            - variable: flowDetails
                              $ref: '#/flowDetails'
                    - parse:
                        name: CSV Parser Parse
                        parse-format: csv
                        source:
                          template: '{{$IBMCloudObjectStorageS3Downloadobject2.content}}'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: IBMCloudObjectStorageS3Downloadobject2
                              $ref: >-
                                #/block/If/node-output/IBM Cloud Object Storage
                                S3 Download object 2/response/payload
                            - variable: IBMCloudObjectStorageS3Retrieveobjects
                              $ref: >-
                                #/node-output/IBM Cloud Object Storage S3
                                Retrieve objects/response/payload
                            - variable: IBMCloudObjectStorageS3RetrieveobjectsMetadata
                              $ref: >-
                                #/node-output/IBM Cloud Object Storage S3
                                Retrieve objects/response
                            - variable: flowDetails
                              $ref: '#/flowDetails'
                        sample-data: >-
                          1,PSL foundation Day,Event Description:First PSL
                          office inaugration day,01-Jan-24,true
                        output-schema:
                          $schema: http://json-schema.org/draft-04/schema#
                          type: array
                          items:
                            type: object
                            properties:
                              field1:
                                type: string
                              field2:
                                type: string
                              field3:
                                type: string
                              field4:
                                type: string
                              field5:
                                type: string
                          title: Parsed CSV
                        options: {}
                    - upsert-action:
                        name: Amazon Redshift Update or create ibmevents record
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-2'
                        map:
                          mappings:
                            - eventdate:
                                template: '{{$CSVParserParse.field4}}'
                            - eventdescription:
                                template: '{{$CSVParserParse.field3}}'
                            - eventname:
                                template: '{{$CSVParserParse.field2}}'
                            - isinternal:
                                expression: '$CSVParserParse.field5 '
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: IBMCloudObjectStorageS3Downloadobject2
                              $ref: >-
                                #/block/If/node-output/IBM Cloud Object Storage
                                S3 Download object 2/response/payload
                            - variable: CSVParserParse
                              $ref: >-
                                #/block/If/node-output/CSV Parser
                                Parse/response/payload
                            - variable: IBMCloudObjectStorageS3Retrieveobjects
                              $ref: >-
                                #/node-output/IBM Cloud Object Storage S3
                                Retrieve objects/response/payload
                            - variable: IBMCloudObjectStorageS3RetrieveobjectsMetadata
                              $ref: >-
                                #/node-output/IBM Cloud Object Storage S3
                                Retrieve objects/response
                            - variable: flowDetails
                              $ref: '#/flowDetails'
                        filter:
                          where:
                            eventid: '{{$CSVParserParse.field1}}'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: IBMCloudObjectStorageS3Downloadobject2
                              $ref: >-
                                #/block/If/node-output/IBM Cloud Object Storage
                                S3 Download object 2/response/payload
                            - variable: CSVParserParse
                              $ref: >-
                                #/block/If/node-output/CSV Parser
                                Parse/response/payload
                            - variable: IBMCloudObjectStorageS3Retrieveobjects
                              $ref: >-
                                #/node-output/IBM Cloud Object Storage S3
                                Retrieve objects/response/payload
                            - variable: IBMCloudObjectStorageS3RetrieveobjectsMetadata
                              $ref: >-
                                #/node-output/IBM Cloud Object Storage S3
                                Retrieve objects/response
                            - variable: flowDetails
                              $ref: '#/flowDetails'
                          limit: 10
              else:
                execute:
                  - create-action:
                      name: Gmail Send email 3
                      target:
                        $ref: '#/integration/action-interfaces/action-interface-6'
                      map:
                        mappings:
                          - Subject:
                              template: else condition met
                          - To:
                              template: kamakshi@abc.com
                          - richTextBody:
                              mappings:
                                - content:
                                    template: 'No new objects '
                                - contentType:
                                    template: text/plain
                        $map: http://ibm.com/appconnect/map/v1
                        input:
                          - variable: Foreachitem
                            $ref: '#/block/For each/current-item'
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                          - variable: IBMCloudObjectStorageS3Retrieveobjects
                            $ref: >-
                              #/node-output/IBM Cloud Object Storage S3 Retrieve
                              objects/response/payload
                          - variable: IBMCloudObjectStorageS3RetrieveobjectsMetadata
                            $ref: >-
                              #/node-output/IBM Cloud Object Storage S3 Retrieve
                              objects/response
                          - variable: flowDetails
                            $ref: '#/flowDetails'
              output-schema: {}
  name: Integrate data between IBM Could Object Storage S3 and Amazon Redshift
models: {}
