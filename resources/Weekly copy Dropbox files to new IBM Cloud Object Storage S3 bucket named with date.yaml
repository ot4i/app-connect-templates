$integration: 'http://ibm.com/appconnect/integration/v2/integrationFile'
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      connector-type: streaming-connector-scheduler
      type: event-trigger
      triggers:
        SCHEDULE:
          input-context:
            data: scheduler
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              scheduleConfiguration:
                calendar:
                  cronExp: 00 20 * * FRI
                  runOnceOncheck: true
                  timeZone: Etc/GMT
                  every: week
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: foldercollection
      connector-type: dropbox
      actions:
        RETRIEVEALL: {}
    action-interface-2:
      type: api-action
      business-object: filecollection
      connector-type: dropbox
      actions:
        RETRIEVEALL: {}
    action-interface-3:
      type: api-action
      business-object: bucket
      connector-type: ibmcoss3
      actions:
        CREATE: {}
    action-interface-4:
      type: api-action
      business-object: files
      connector-type: dropbox
      actions:
        DOWNLOADFILE: {}
    action-interface-5:
      type: api-action
      business-object: object
      connector-type: ibmcoss3
      actions:
        CREATE: {}
    action-interface-6:
      type: api-action
      business-object: files
      connector-type: dropbox
      actions:
        DOWNLOADFILE: {}
    action-interface-7:
      type: api-action
      business-object: object
      connector-type: ibmcoss3
      actions:
        CREATE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - retrieve-action:
              name: Dropbox Retrieve all folders
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              filter:
                limit: 10
              allow-truncation: false
              pagination-type: TOKEN
              allow-empty-output: false
          - set-variable:
              name: Set variable
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: DropboxRetrieveallfolders
                    $ref: >-
                      #/node-output/Dropbox Retrieve all
                      folders/response/payload
                  - variable: DropboxRetrieveallfoldersMetadata
                    $ref: '#/node-output/Dropbox Retrieve all folders/response'
                customSchemas:
                  properties.`variable`:
                    type: object
                    properties:
                      FolderID:
                        type: string
                mappings:
                  - variable:
                      mappings:
                        - FolderID:
                            template: >-
                              {{$DropboxRetrieveallfolders[path_lower="/shared"].id}}
          - retrieve-action:
              name: Dropbox Retrieve all files
              target:
                $ref: '#/integration/action-interfaces/action-interface-2'
              filter:
                where:
                  folder_id: '{{$Setvariable.variable.FolderID}}'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: DropboxRetrieveallfolders
                    $ref: >-
                      #/node-output/Dropbox Retrieve all
                      folders/response/payload
                  - variable: DropboxRetrieveallfoldersMetadata
                    $ref: '#/node-output/Dropbox Retrieve all folders/response'
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                limit: 10
              allow-truncation: false
              pagination-type: TOKEN
              allow-empty-output: false
          - create-action:
              name: IBM Cloud Object Storage S3 Create bucket
              target:
                $ref: '#/integration/action-interfaces/action-interface-3'
              map:
                mappings:
                  - Name:
                      template: 'dearliza-{{$now(''[Y0001]-[M01]-[D01]'') }}'
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: DropboxRetrieveallfolders
                    $ref: >-
                      #/node-output/Dropbox Retrieve all
                      folders/response/payload
                  - variable: DropboxRetrieveallfoldersMetadata
                    $ref: '#/node-output/Dropbox Retrieve all folders/response'
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                  - variable: DropboxRetrieveallfiles
                    $ref: '#/node-output/Dropbox Retrieve all files/response/payload'
                  - variable: DropboxRetrieveallfilesMetadata
                    $ref: '#/node-output/Dropbox Retrieve all files/response'
          - for-each:
              name: For each
              assembly:
                $ref: '#/integration/assemblies/assembly-2'
              source:
                expression: '$DropboxRetrieveallfiles '
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: DropboxRetrieveallfolders
                    $ref: >-
                      #/node-output/Dropbox Retrieve all
                      folders/response/payload
                  - variable: DropboxRetrieveallfoldersMetadata
                    $ref: '#/node-output/Dropbox Retrieve all folders/response'
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                  - variable: DropboxRetrieveallfiles
                    $ref: '#/node-output/Dropbox Retrieve all files/response/payload'
                  - variable: DropboxRetrieveallfilesMetadata
                    $ref: '#/node-output/Dropbox Retrieve all files/response'
                  - variable: IBMCloudObjectStorageS3Createbucket
                    $ref: >-
                      #/node-output/IBM Cloud Object Storage S3 Create
                      bucket/response/payload
              mode: sequential
              continue-on-error: true
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: DropboxRetrieveallfolders
                    $ref: >-
                      #/node-output/Dropbox Retrieve all
                      folders/response/payload
                  - variable: DropboxRetrieveallfoldersMetadata
                    $ref: '#/node-output/Dropbox Retrieve all folders/response'
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                  - variable: DropboxRetrieveallfiles
                    $ref: '#/node-output/Dropbox Retrieve all files/response/payload'
                  - variable: DropboxRetrieveallfilesMetadata
                    $ref: '#/node-output/Dropbox Retrieve all files/response'
                  - variable: IBMCloudObjectStorageS3Createbucket
                    $ref: >-
                      #/node-output/IBM Cloud Object Storage S3 Create
                      bucket/response/payload
                mappings: []
              display-name: Dropbox filecollection
    assembly-2:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Foreachitem
                  $ref: '#/block/For each/current-item'
                - variable: Trigger
                  $ref: '#/trigger/payload'
                - variable: DropboxRetrieveallfolders
                  $ref: '#/node-output/Dropbox Retrieve all folders/response/payload'
                - variable: DropboxRetrieveallfoldersMetadata
                  $ref: '#/node-output/Dropbox Retrieve all folders/response'
                - variable: Setvariable
                  $ref: '#/node-output/Set variable/response/payload'
                - variable: DropboxRetrieveallfiles
                  $ref: '#/node-output/Dropbox Retrieve all files/response/payload'
                - variable: DropboxRetrieveallfilesMetadata
                  $ref: '#/node-output/Dropbox Retrieve all files/response'
                - variable: IBMCloudObjectStorageS3Createbucket
                  $ref: >-
                    #/node-output/IBM Cloud Object Storage S3 Create
                    bucket/response/payload
              branch:
                - condition:
                    or:
                      - '{{$contains($Foreachitem.name, ".mp3")}}':
                          =: 'true'
                      - '{{$contains($Foreachitem.name, ".pdf")}}':
                          =: 'true'
                  execute:
                    - custom-action:
                        name: Dropbox Download file content
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-4'
                        action: DOWNLOADFILE
                        map:
                          mappings:
                            - fileType:
                                template: Binary
                            - path:
                                template: '{{$Foreachitem.path_lower}}'
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: DropboxRetrieveallfolders
                              $ref: >-
                                #/node-output/Dropbox Retrieve all
                                folders/response/payload
                            - variable: DropboxRetrieveallfoldersMetadata
                              $ref: >-
                                #/node-output/Dropbox Retrieve all
                                folders/response
                            - variable: Setvariable
                              $ref: '#/node-output/Set variable/response/payload'
                            - variable: DropboxRetrieveallfiles
                              $ref: >-
                                #/node-output/Dropbox Retrieve all
                                files/response/payload
                            - variable: DropboxRetrieveallfilesMetadata
                              $ref: >-
                                #/node-output/Dropbox Retrieve all
                                files/response
                            - variable: IBMCloudObjectStorageS3Createbucket
                              $ref: >-
                                #/node-output/IBM Cloud Object Storage S3 Create
                                bucket/response/payload
                    - create-action:
                        name: IBM Cloud Object Storage S3 Create object
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-5'
                        map:
                          mappings:
                            - Key:
                                template: '{{$Foreachitem.name}}'
                            - bucketName:
                                template: 'dearliza-{{$now(''[Y0001]-[M01]-[D01]'') }}'
                            - content:
                                template: '{{$DropboxDownloadfilecontent.fileContent}}'
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: DropboxDownloadfilecontent
                              $ref: >-
                                #/block/If/node-output/Dropbox Download file
                                content/response/payload
                            - variable: DropboxRetrieveallfolders
                              $ref: >-
                                #/node-output/Dropbox Retrieve all
                                folders/response/payload
                            - variable: DropboxRetrieveallfoldersMetadata
                              $ref: >-
                                #/node-output/Dropbox Retrieve all
                                folders/response
                            - variable: Setvariable
                              $ref: '#/node-output/Set variable/response/payload'
                            - variable: DropboxRetrieveallfiles
                              $ref: >-
                                #/node-output/Dropbox Retrieve all
                                files/response/payload
                            - variable: DropboxRetrieveallfilesMetadata
                              $ref: >-
                                #/node-output/Dropbox Retrieve all
                                files/response
                            - variable: IBMCloudObjectStorageS3Createbucket
                              $ref: >-
                                #/node-output/IBM Cloud Object Storage S3 Create
                                bucket/response/payload
              else:
                execute:
                  - custom-action:
                      name: Dropbox Download file content 2
                      target:
                        $ref: '#/integration/action-interfaces/action-interface-6'
                      action: DOWNLOADFILE
                      map:
                        mappings:
                          - fileType:
                              template: Text
                          - path:
                              template: '{{$Foreachitem.path_lower}}'
                        $map: 'http://ibm.com/appconnect/map/v1'
                        input:
                          - variable: Foreachitem
                            $ref: '#/block/For each/current-item'
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                          - variable: DropboxRetrieveallfolders
                            $ref: >-
                              #/node-output/Dropbox Retrieve all
                              folders/response/payload
                          - variable: DropboxRetrieveallfoldersMetadata
                            $ref: >-
                              #/node-output/Dropbox Retrieve all
                              folders/response
                          - variable: Setvariable
                            $ref: '#/node-output/Set variable/response/payload'
                          - variable: DropboxRetrieveallfiles
                            $ref: >-
                              #/node-output/Dropbox Retrieve all
                              files/response/payload
                          - variable: DropboxRetrieveallfilesMetadata
                            $ref: '#/node-output/Dropbox Retrieve all files/response'
                          - variable: IBMCloudObjectStorageS3Createbucket
                            $ref: >-
                              #/node-output/IBM Cloud Object Storage S3 Create
                              bucket/response/payload
                  - create-action:
                      name: IBM Cloud Object Storage S3 Create object 2
                      target:
                        $ref: '#/integration/action-interfaces/action-interface-7'
                      map:
                        mappings:
                          - Key:
                              template: '{{$Foreachitem.name}}'
                          - bucketName:
                              template: 'dearliza-{{$now(''[Y0001]-[M01]-[D01]'') }}'
                          - content:
                              template: '{{$DropboxDownloadfilecontent2.fileContent}}'
                          - contentType:
                              template: text/plain
                        $map: 'http://ibm.com/appconnect/map/v1'
                        input:
                          - variable: Foreachitem
                            $ref: '#/block/For each/current-item'
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                          - variable: DropboxDownloadfilecontent2
                            $ref: >-
                              #/block/If/node-output/Dropbox Download file
                              content 2/response/payload
                          - variable: DropboxRetrieveallfolders
                            $ref: >-
                              #/node-output/Dropbox Retrieve all
                              folders/response/payload
                          - variable: DropboxRetrieveallfoldersMetadata
                            $ref: >-
                              #/node-output/Dropbox Retrieve all
                              folders/response
                          - variable: Setvariable
                            $ref: '#/node-output/Set variable/response/payload'
                          - variable: DropboxRetrieveallfiles
                            $ref: >-
                              #/node-output/Dropbox Retrieve all
                              files/response/payload
                          - variable: DropboxRetrieveallfilesMetadata
                            $ref: '#/node-output/Dropbox Retrieve all files/response'
                          - variable: IBMCloudObjectStorageS3Createbucket
                            $ref: >-
                              #/node-output/IBM Cloud Object Storage S3 Create
                              bucket/response/payload
              output-schema: {}
  name: Weekly copy Dropbox files to new IBM Cloud Object Storage S3 bucket named with date
models: {}
