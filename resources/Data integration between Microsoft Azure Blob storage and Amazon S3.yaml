$integration: http://ibm.com/appconnect/integration/v2/integrationFile
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      connector-type: streaming-connector-scheduler
      type: event-trigger
      triggers:
        SCHEDULE:
          input-context:
            data: scheduler
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              scheduleConfiguration:
                interval:
                  unit: hour
                  value: 1
                  runOnceOncheck: true
                  days:
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                  timeZone: UTC
  action-interfaces:
    action-interface-3:
      type: api-action
      business-object: blob
      connector-type: azureblobstorage
      actions:
        RETRIEVEALL: {}
    action-interface-2:
      type: api-action
      business-object: blob
      connector-type: azureblobstorage
      actions:
        DOWNLOADBLOBCONTENT: {}
    action-interface-1:
      type: api-action
      business-object: object
      connector-type: amazons3
      actions:
        CREATE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - retrieve-action:
              name: Microsoft Azure Blob storage Retrieve blobs
              target:
                $ref: '#/integration/action-interfaces/action-interface-3'
              filter:
                where:
                  and:
                    - containerName: 0testcontainer
                    - name: largeFile.txt
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                limit: 1000
              allow-truncation: true
              pagination-type: TOKEN
              allow-empty-output: false
          - set-variable:
              name: Set variable
              map:
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: MicrosoftAzureBlobstorageRetrieveblobs
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response/payload
                  - variable: MicrosoftAzureBlobstorageRetrieveblobsMetadata
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response
                customSchemas:
                  properties.`variable`:
                    type: object
                    properties:
                      chunkCounter:
                        type: number
                mappings:
                  - variable:
                      mappings:
                        - chunkCounter:
                            expression: >-
                              ($ceil($MicrosoftAzureBlobstorageRetrieveblobs.properties.contentLength
                              /1048576) )-1
          - set-variable:
              name: Set variable 2
              map:
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: MicrosoftAzureBlobstorageRetrieveblobs
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response/payload
                  - variable: MicrosoftAzureBlobstorageRetrieveblobsMetadata
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                customSchemas:
                  properties.`variable`:
                    type: object
                    properties:
                      Iterator:
                        type: array
                        items:
                          type: number
                mappings:
                  - variable:
                      mappings:
                        - Iterator:
                            expression: '[0..$Setvariable.variable.chunkCounter ]'
          - for-each:
              name: For each
              assembly:
                $ref: '#/integration/assemblies/assembly-2'
              source:
                expression: '$Setvariable2.variable.Iterator '
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: MicrosoftAzureBlobstorageRetrieveblobs
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response/payload
                  - variable: MicrosoftAzureBlobstorageRetrieveblobsMetadata
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
              mode: sequential
              continue-on-error: true
              map:
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: MicrosoftAzureBlobstorageDownloadblobcontent
                    $ref: >-
                      #/block/For each/node-output/Microsoft Azure Blob storage
                      Download blob content/response/payload
                  - variable: AmazonS3Createobject
                    $ref: >-
                      #/block/For each/node-output/Amazon S3 Create
                      object/response/payload
                  - variable: MicrosoftAzureBlobstorageRetrieveblobs
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response/payload
                  - variable: MicrosoftAzureBlobstorageRetrieveblobsMetadata
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
                customSchemas:
                  properties.`output`:
                    type: object
                    properties:
                      offset:
                        type: number
                mappings:
                  - output:
                      mappings:
                        - offset:
                            expression: $Foreachitem *1048576
              display-name: Iterator
    assembly-2:
      assembly:
        execute:
          - custom-action:
              name: Microsoft Azure Blob storage Download blob content
              target:
                $ref: '#/integration/action-interfaces/action-interface-2'
              action: DOWNLOADBLOBCONTENT
              map:
                mappings:
                  - containerName:
                      template: 0testcontainer
                  - contentType:
                      template: Text
                  - count:
                      expression: '1048576'
                  - name:
                      template: '{{$MicrosoftAzureBlobstorageRetrieveblobs.name}}'
                  - offset:
                      expression: $Foreachitem *1048576
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: MicrosoftAzureBlobstorageRetrieveblobs
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response/payload
                  - variable: MicrosoftAzureBlobstorageRetrieveblobsMetadata
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
          - create-action:
              name: Amazon S3 Create object
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              map:
                mappings:
                  - ContentType:
                      template: text/plain
                  - Key:
                      template: '{{$Foreachitem}}.txt'
                  - bucketName:
                      template: 000azure
                  - content:
                      template: '{{$MicrosoftAzureBlobstorageDownloadblobcontent.body}}'
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: MicrosoftAzureBlobstorageDownloadblobcontent
                    $ref: >-
                      #/block/For each/node-output/Microsoft Azure Blob storage
                      Download blob content/response/payload
                  - variable: MicrosoftAzureBlobstorageRetrieveblobs
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response/payload
                  - variable: MicrosoftAzureBlobstorageRetrieveblobsMetadata
                    $ref: >-
                      #/node-output/Microsoft Azure Blob storage Retrieve
                      blobs/response
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
  name: Data integration between Microsoft Azure Blob storage and Amazon S3
  description: Use this template to create a scheduler-based flow that retrieves a large blob file’s metadata from a specified Azure blob container, splits the file into a user-defined file size, downloads the file content, and uploads the spilt files to an Amazon S3 bucket or any other storage endpoint.
models: {}