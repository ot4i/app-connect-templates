$integration: http://ibm.com/appconnect/integration/v2/integrationFile
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      connector-type: zendeskservice
      type: event-trigger
      triggers:
        CREATED_POLLER:
          input-context:
            data: Ticket
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              createdField: created_at
              updatedField: updated_at
              timeFormat: YYYY-MM-DDTHH:mm:ss.SSSZ
              timeZone: UTC
              pollingInterval: 1
              isCreatedQueryable: true
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: Instance
      connector-type: amazonec2
      actions:
        STOPINSTANCES: {}
    action-interface-3:
      type: api-action
      business-object: Instance
      connector-type: amazonec2
      actions:
        STARTINSTANCES: {}
    action-interface-4:
      type: api-action
      business-object: Instance
      connector-type: amazonec2
      actions:
        REBOOTINSTANCES: {}
    action-interface-2:
      type: api-action
      business-object: message
      connector-type: slack
      actions:
        CREATE: {}
    action-interface-5:
      type: api-action
      business-object: message
      connector-type: slack
      actions:
        CREATE: {}
    action-interface-6:
      type: api-action
      business-object: message
      connector-type: slack
      actions:
        CREATE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Trigger
                  $ref: '#/trigger/payload'
                - variable: flowDetails
                  $ref: '#/flowDetails'
              branch:
                - condition:
                    '{{$Trigger.subject}}': Stop Instance Request
                  execute:
                    - custom-action:
                        name: Amazon EC2 Stop instances
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-1'
                        action: STOPINSTANCES
                        map:
                          mappings:
                            - InstanceIds:
                                expression: '[$Trigger.ticket_fields.id__10425747441305 ]'
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: flowDetails
                              $ref: '#/flowDetails'
                    - create-action:
                        name: Slack Send message
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-2'
                        map:
                          mappings:
                            - OBJECT_ID:
                                template: C04100PVAH3
                            - OBJECT_NAME:
                                template: channel
                            - text:
                                template: >-
                                  {{$AmazonEC2Stopinstances.StoppingInstances.InstanceId}}
                                  stopped
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: AmazonEC2Stopinstances
                              $ref: >-
                                #/block/If/node-output/Amazon EC2 Stop
                                instances/response/payload
                            - variable: flowDetails
                              $ref: '#/flowDetails'
                - condition:
                    '{{$Trigger.subject}}': Start Instance Request
                  execute:
                    - custom-action:
                        name: Amazon EC2 Start instances
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-3'
                        action: STARTINSTANCES
                        map:
                          mappings:
                            - InstanceIds:
                                expression: '[$Trigger.ticket_fields.id__10425747441305 ]'
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: flowDetails
                              $ref: '#/flowDetails'
                    - create-action:
                        name: Slack Send message 2
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-5'
                        map:
                          mappings:
                            - OBJECT_ID:
                                template: C04100PVAH3
                            - OBJECT_NAME:
                                template: channel
                            - text:
                                template: >-
                                  instance id
                                  {{$AmazonEC2Startinstances.StartingInstances.InstanceId}}started
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: AmazonEC2Startinstances
                              $ref: >-
                                #/block/If/node-output/Amazon EC2 Start
                                instances/response/payload
                            - variable: flowDetails
                              $ref: '#/flowDetails'
                - condition:
                    '{{$Trigger.subject}}': Reboot Instance Request
                  execute:
                    - custom-action:
                        name: Amazon EC2 Reboot instances
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-4'
                        action: REBOOTINSTANCES
                        map:
                          mappings:
                            - InstanceIds:
                                expression: '[$Trigger.ticket_fields.id__10425747441305 ]'
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: flowDetails
                              $ref: '#/flowDetails'
                    - create-action:
                        name: Slack Send message 3
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-6'
                        map:
                          mappings:
                            - OBJECT_ID:
                                template: C04100PVAH3
                            - OBJECT_NAME:
                                template: channel
                            - text:
                                template: >-
                                  instance
                                  {{$Trigger.ticket_fields.id__10425747441305}}
                                  rebooted
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: AmazonEC2Rebootinstances
                              $ref: >-
                                #/block/If/node-output/Amazon EC2 Reboot
                                instances/response/payload
                            - variable: flowDetails
                              $ref: '#/flowDetails'
              else:
                execute: []
              output-schema: {}
        tags:
          - incomplete
  name: >-
    Stop or start or reboot the Amazon EC2 instance whenever a Zendesk Service
    ticket gets created
  description: >-
    Use this template to stop, start, or reboot the Amazon EC2 instance 
    whenever a Zendesk Service ticket gets created.
models: {}
