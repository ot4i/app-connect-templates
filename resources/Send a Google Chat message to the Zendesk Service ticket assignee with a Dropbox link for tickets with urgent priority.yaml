$integration: http://ibm.com/appconnect/integration/v2/integrationFile
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      connector-type: streaming-connector-scheduler
      type: event-trigger
      triggers:
        SCHEDULE:
          input-context:
            data: scheduler
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              scheduleConfiguration:
                interval:
                  unit: hour
                  value: 1
                  runOnceOncheck: true
                  days:
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
                    - SUN
                  timeZone: UTC
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: User
      connector-type: zendeskservice
      actions:
        RETRIEVEALL: {}
    action-interface-5:
      type: api-action
      business-object: Ticket
      connector-type: zendeskservice
      actions:
        RETRIEVEALL: {}
    action-interface-2:
      type: api-action
      business-object: postSpacesBySpaceNameMembers_model
      connector-type: googlechat
      actions:
        postSpacesBySpaceNameMembers: {}
    action-interface-3:
      type: api-action
      business-object: postSpacesBySpaceNameMessages_model
      connector-type: googlechat
      actions:
        postSpacesBySpaceNameMessages: {}
    action-interface-4:
      type: api-action
      business-object: postSpacesBySpaceNameMessages_model
      connector-type: googlechat
      actions:
        postSpacesBySpaceNameMessages: {}
    action-interface-9:
      type: api-action
      business-object: Organization
      connector-type: zendeskservice
      actions:
        RETRIEVEALL: {}
    action-interface-7:
      type: api-action
      business-object: folders
      connector-type: dropbox
      actions:
        CREATE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - retrieve-action:
              name: Zendesk Service Retrieve users
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              filter:
                where:
                  name: Appconnect
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
                limit: 3
              allow-truncation: true
              pagination-type: TOKEN
              allow-empty-output: false
          - retrieve-action:
              name: Zendesk Service Retrieve organizations
              target:
                $ref: '#/integration/action-interfaces/action-interface-9'
              filter:
                where:
                  name: appconnectnewtest
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: ZendeskServiceRetrieveusers
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      users/response/payload
                  - variable: ZendeskServiceRetrieveusersMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve users/response'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
                limit: 1
              allow-truncation: true
              pagination-type: TOKEN
              allow-empty-output: false
          - retrieve-action:
              name: Zendesk Service Retrieve tickets
              target:
                $ref: '#/integration/action-interfaces/action-interface-5'
              filter:
                where:
                  organization_id: '24592346618905'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: ZendeskServiceRetrieveusers
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      users/response/payload
                  - variable: ZendeskServiceRetrieveusersMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve users/response'
                  - variable: ZendeskServiceRetrieveorganizations
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response/payload
                  - variable: ZendeskServiceRetrieveorganizationsMetadata
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response
                  - variable: flowDetails
                    $ref: '#/flowDetails'
                limit: 10
              allow-truncation: true
              pagination-type: TOKEN
              allow-empty-output: false
          - for-each:
              name: For each
              assembly:
                $ref: '#/integration/assemblies/assembly-2'
              source:
                expression: '$ZendeskServiceRetrieveusers '
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: ZendeskServiceRetrieveusers
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      users/response/payload
                  - variable: ZendeskServiceRetrieveusersMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve users/response'
                  - variable: ZendeskServiceRetrieveorganizations
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response/payload
                  - variable: ZendeskServiceRetrieveorganizationsMetadata
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response
                  - variable: ZendeskServiceRetrievetickets
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      tickets/response/payload
                  - variable: ZendeskServiceRetrieveticketsMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve tickets/response'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
              mode: sequential
              continue-on-error: true
              map:
                $map: http://ibm.com/appconnect/map/v1
                customSchemas:
                  properties.`output`:
                    type: object
                    properties:
                      email:
                        type: string
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: ZendeskServiceRetrieveusers
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      users/response/payload
                  - variable: ZendeskServiceRetrieveusersMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve users/response'
                  - variable: ZendeskServiceRetrievetickets
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      tickets/response/payload
                  - variable: ZendeskServiceRetrieveticketsMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve tickets/response'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
                mappings:
                  - output:
                      mappings:
                        - email:
                            template: '{{$Foreachitem.email}}'
              display-name: Zendesk Service User
          - create-action:
              name: Dropbox Create folder
              target:
                $ref: '#/integration/action-interfaces/action-interface-7'
              map:
                mappings:
                  - path:
                      template: /{{$ZendeskServiceRetrieveorganizations.name}}
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: ZendeskServiceRetrieveusers
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      users/response/payload
                  - variable: ZendeskServiceRetrieveusersMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve users/response'
                  - variable: ZendeskServiceRetrieveorganizations
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response/payload
                  - variable: ZendeskServiceRetrieveorganizationsMetadata
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response
                  - variable: ZendeskServiceRetrievetickets
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      tickets/response/payload
                  - variable: ZendeskServiceRetrieveticketsMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve tickets/response'
                  - variable: ZendeskServiceUpdateticket
                    $ref: >-
                      #/node-output/Zendesk Service Update
                      ticket/response/payload
                  - variable: ZendeskServiceUpdateticketMetadata
                    $ref: '#/node-output/Zendesk Service Update ticket/response'
                  - variable: Foreach
                    $ref: '#/node-output/For each/response/payload'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
          - for-each:
              name: For each 2
              assembly:
                $ref: '#/integration/assemblies/assembly-3'
              source:
                expression: '$ZendeskServiceRetrievetickets '
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: ZendeskServiceRetrieveusers
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      users/response/payload
                  - variable: ZendeskServiceRetrieveusersMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve users/response'
                  - variable: ZendeskServiceRetrieveorganizations
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response/payload
                  - variable: ZendeskServiceRetrieveorganizationsMetadata
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response
                  - variable: ZendeskServiceRetrievetickets
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      tickets/response/payload
                  - variable: ZendeskServiceRetrieveticketsMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve tickets/response'
                  - variable: Foreach
                    $ref: '#/node-output/For each/response/payload'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
              mode: sequential
              continue-on-error: true
              map:
                $map: http://ibm.com/appconnect/map/v1
                customSchemas:
                  properties.`output`:
                    type: object
                    properties:
                      ticketid:
                        type: string
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: GoogleChatAddmembertospace
                    $ref: >-
                      #/block/For each/node-output/Google Chat Add member to
                      space/response/payload
                  - variable: GoogleChatSendmessage
                    $ref: >-
                      #/block/For each/node-output/Google Chat Send
                      message/response/payload
                  - variable: ZendeskServiceRetrieveusers
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      users/response/payload
                  - variable: ZendeskServiceRetrieveusersMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve users/response'
                  - variable: ZendeskServiceRetrievetickets
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      tickets/response/payload
                  - variable: ZendeskServiceRetrieveticketsMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve tickets/response'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
                mappings:
                  - output:
                      mappings:
                        - ticketid:
                            template: '{{$Foreach2item.id}}'
              display-name: Zendesk Service Ticket
    assembly-2:
      assembly:
        execute:
          - custom-action:
              name: Google Chat Add member to space
              target:
                $ref: '#/integration/action-interfaces/action-interface-2'
              action: postSpacesBySpaceNameMembers
              map:
                mappings:
                  - ___type:
                      template: HUMAN
                  - name:
                      template: '{{$Foreachitem.email}}'
                  - spaceName:
                      template: AAAAPsgc5hw
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: ZendeskServiceRetrieveusers
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      users/response/payload
                  - variable: ZendeskServiceRetrieveusersMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve users/response'
                  - variable: ZendeskServiceRetrieveorganizations
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response/payload
                  - variable: ZendeskServiceRetrieveorganizationsMetadata
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response
                  - variable: ZendeskServiceRetrievetickets
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      tickets/response/payload
                  - variable: ZendeskServiceRetrieveticketsMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve tickets/response'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
          - custom-action:
              name: Google Chat Send message
              target:
                $ref: '#/integration/action-interfaces/action-interface-3'
              action: postSpacesBySpaceNameMessages
              map:
                mappings:
                  - spaceName:
                      template: AAAAPsgc5hw
                  - text:
                      template: Welocme {{$Foreachitem.email}} to zendesk space
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: GoogleChatAddmembertospace
                    $ref: >-
                      #/block/For each/node-output/Google Chat Add member to
                      space/response/payload
                  - variable: ZendeskServiceRetrieveusers
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      users/response/payload
                  - variable: ZendeskServiceRetrieveusersMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve users/response'
                  - variable: ZendeskServiceRetrieveorganizations
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response/payload
                  - variable: ZendeskServiceRetrieveorganizationsMetadata
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      organizations/response
                  - variable: ZendeskServiceRetrievetickets
                    $ref: >-
                      #/node-output/Zendesk Service Retrieve
                      tickets/response/payload
                  - variable: ZendeskServiceRetrieveticketsMetadata
                    $ref: '#/node-output/Zendesk Service Retrieve tickets/response'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
    assembly-3:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Foreach2item
                  $ref: '#/block/For each 2/current-item'
                - variable: Trigger
                  $ref: '#/trigger/payload'
                - variable: ZendeskServiceRetrieveusers
                  $ref: >-
                    #/node-output/Zendesk Service Retrieve
                    users/response/payload
                - variable: ZendeskServiceRetrieveusersMetadata
                  $ref: '#/node-output/Zendesk Service Retrieve users/response'
                - variable: ZendeskServiceRetrieveorganizations
                  $ref: >-
                    #/node-output/Zendesk Service Retrieve
                    organizations/response/payload
                - variable: ZendeskServiceRetrieveorganizationsMetadata
                  $ref: >-
                    #/node-output/Zendesk Service Retrieve
                    organizations/response
                - variable: ZendeskServiceRetrievetickets
                  $ref: >-
                    #/node-output/Zendesk Service Retrieve
                    tickets/response/payload
                - variable: ZendeskServiceRetrieveticketsMetadata
                  $ref: '#/node-output/Zendesk Service Retrieve tickets/response'
                - variable: ZendeskServiceUpdateticket
                  $ref: '#/node-output/Zendesk Service Update ticket/response/payload'
                - variable: ZendeskServiceUpdateticketMetadata
                  $ref: '#/node-output/Zendesk Service Update ticket/response'
                - variable: Foreach
                  $ref: '#/node-output/For each/response/payload'
                - variable: flowDetails
                  $ref: '#/flowDetails'
              branch:
                - condition:
                    and:
                      - '{{$Foreach2item.priority}}': urgent
                      - '{{$Foreach2item.created_at}}':
                          lt: '{{$Trigger.currentEventTime}}'
                        hashKey: object:964
                  execute:
                    - custom-action:
                        name: Google Chat Send message 2
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-4'
                        action: postSpacesBySpaceNameMessages
                        map:
                          mappings:
                            - spaceName:
                                template: AAAAPsgc5hw
                            - text:
                                template: >-
                                  Hi {{$Foreach2item.recipient}}  Urgent ticket
                                  at {{$Foreach2item.url}}is waiting for an
                                  closure please work on it ASAP.  Evidences
                                  with RCA can be loaded at
                                  https://www.dropbox.com/home{{$DropboxCreatefolder.path}}
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Foreach2item
                              $ref: '#/block/For each 2/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: ZendeskServiceRetrieveusers
                              $ref: >-
                                #/node-output/Zendesk Service Retrieve
                                users/response/payload
                            - variable: ZendeskServiceRetrieveusersMetadata
                              $ref: >-
                                #/node-output/Zendesk Service Retrieve
                                users/response
                            - variable: ZendeskServiceRetrieveorganizations
                              $ref: >-
                                #/node-output/Zendesk Service Retrieve
                                organizations/response/payload
                            - variable: ZendeskServiceRetrieveorganizationsMetadata
                              $ref: >-
                                #/node-output/Zendesk Service Retrieve
                                organizations/response
                            - variable: ZendeskServiceRetrievetickets
                              $ref: >-
                                #/node-output/Zendesk Service Retrieve
                                tickets/response/payload
                            - variable: ZendeskServiceRetrieveticketsMetadata
                              $ref: >-
                                #/node-output/Zendesk Service Retrieve
                                tickets/response
                            - variable: Foreach
                              $ref: '#/node-output/For each/response/payload'
                            - variable: DropboxCreatefolder
                              $ref: >-
                                #/node-output/Dropbox Create
                                folder/response/payload
                            - variable: flowDetails
                              $ref: '#/flowDetails'
              else:
                execute: []
              output-schema: {}
  name: Send a Google Chat message to the Zendesk Service ticket assignee with a Dropbox link for tickets with urgent priority
models: {}
