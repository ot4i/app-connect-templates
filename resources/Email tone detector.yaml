$integration: 'http://ibm.com/appconnect/integration/v2/integrationFile'
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      type: event-trigger
      triggers:
        CREATED:
          input-context:
            data: mail
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options: {}
      connector-type: gmail
    trigger-interface-2:
      type: event-collector
      triggers:
        SITUATION_DETECTED:
          assembly:
            $ref: '#/integration/assemblies/assembly-2'
      options:
        situation:
          time-window:
            duration: PT10M
          title: Detect situation
          events:
            - ref: '#/integration/action-interfaces/action-interface-3'
              name: Situation detector
              cardinality:
                type: atLeast
                value: 2
              correlation-key: >-
                {{$Trigger.From}} &
                {{$IBMWatsonToneAnalyzerGettoneanalysis.dominant_tones.document_tone.emotion_tone.tone_name}}
          trigger-name: SITUATION_DETECTED
        input:
          - variable: Trigger
            $ref: '#/trigger/payload'
          - variable: IBMWatsonToneAnalyzerGettoneanalysis
            $ref: >-
              #/node-output/IBM Watson Tone Analyzer Get tone
              analysis/response/payload
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: Tone
      connector-type: watsontoneanalyzer
      actions:
        GETTONEANALYSIS: {}
    action-interface-2:
      type: notification-card
      actions: {}
      options:
        card:
          layout:
            direction: vertical
            style: layoutA
            items:
              - direction: horizontal
                style: header
                items:
                  - style: icon
                    widget_id: icon
                  - direction: vertical
                    items:
                      - style: title
                        widget_id: nameLabel
                      - style: subtitle
                        widget_id: timestamp
              - direction: vertical
                style: content
                items:
                  - widget_id: descriptionLabel
              - style: buttons
                widget_id: btnGrp1
          widgets:
            - id: icon
              widget: icon
            - id: timestamp
              widget: timestamp
            - id: btnGrp1
              widget: buttonGroup
              widget_ids: []
            - id: nameLabel
              widget: text
              binding: description
              value: >-
                {{$IBMWatsonToneAnalyzerGettoneanalysis.dominant_tones.document_tone.emotion_tone.tone_name}}
            - id: descriptionLabel
              widget: text
              value: ''
        input:
          - variable: Trigger
            $ref: '#/trigger/payload'
          - variable: IBMWatsonToneAnalyzerGettoneanalysis
            $ref: >-
              #/node-output/IBM Watson Tone Analyzer Get tone
              analysis/response/payload
    action-interface-3:
      type: event-emitter
    action-interface-4:
      type: api-action
      business-object: message
      connector-type: slack
      actions:
        CREATE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - custom-action:
              name: IBM Watson Tone Analyzer Get tone analysis
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              action: GETTONEANALYSIS
              map:
                mappings:
                  - content_type:
                      template: Plain Text
                  - sentences:
                      expression: 'true'
                  - text:
                      template: '{{$Trigger.Body}}'
                  - version:
                      template: '2017-05-08'
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
          - emit-event:
              name: Situation detector
              target:
                $ref: '#/integration/action-interfaces/action-interface-3'
          - notification:
              name: Notification
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                mappings: []
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: IBMWatsonToneAnalyzerGettoneanalysis
                    $ref: >-
                      #/node-output/IBM Watson Tone Analyzer Get tone
                      analysis/response/payload
              target:
                $ref: '#/integration/action-interfaces/action-interface-2'
    assembly-2:
      assembly:
        execute:
          - create-action:
              name: Slack Create message
              target:
                $ref: '#/integration/action-interfaces/action-interface-4'
              map:
                mappings:
                  - channel:
                      template: C6DU0RPK4
                  - text:
                      template: >-
                        Sender: {{$Situationdetector[0].Trigger.From}} Tone:
                        {{$Situationdetector[0].IBMWatsonToneAnalyzerGettoneanalysis.dominant_tones.document_tone.emotion_tone.tone_name}}
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Situationdetector
                    $ref: '#/trigger/payload/Situation detector'
  name: Email tone detector
models: {}
