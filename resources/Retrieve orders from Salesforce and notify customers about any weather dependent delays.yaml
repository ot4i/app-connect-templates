$integration: http://ibm.com/appconnect/integration/v2/integrationFile
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      connector-type: streaming-connector-scheduler
      type: event-trigger
      triggers:
        SCHEDULE:
          input-context:
            data: scheduler
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              scheduleConfiguration:
                interval:
                  unit: hour
                  value: 16
                  runOnceOncheck: true
                  days:
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
                    - SUN
                  timeZone: UTC
  action-interfaces:
    action-interface-2:
      type: api-action
      business-object: Forecasts
      connector-type: ibmtwc
      actions:
        RETRIEVEFORECAST: {}
    action-interface-1:
      type: api-action
      business-object: Order
      connector-type: salesforce
      actions:
        RETRIEVEALL: {}
    action-interface-5:
      type: api-action
      business-object: MailMessage
      connector-type: domino
      actions:
        SENDEMAIL: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - retrieve-action:
              name: Salesforce Retrieve orders
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              filter:
                where:
                  OrderNumber: 109
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                limit: 1
              allow-truncation: true
              pagination-type: TOKEN
              allow-empty-output: true
          - custom-action:
              name: IBM Weather Company Data Limited Edition Retrieve forecasts
              target:
                $ref: '#/integration/action-interfaces/action-interface-2'
              action: RETRIEVEFORECAST
              map:
                mappings:
                  - language:
                      template: en-US
                  - postalKey:
                      template: >-
                        {{$SalesforceRetrieveorders.BillingPostalCode}}:{{$SalesforceRetrieveorders.BillingCountry}}
                  - units:
                      template: s
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: SalesforceRetrieveorders
                    $ref: '#/node-output/Salesforce Retrieve orders/response/payload'
                  - variable: SalesforceRetrieveordersMetadata
                    $ref: '#/node-output/Salesforce Retrieve orders/response'
                  - variable: SlackCreatemessage4
                    $ref: '#/node-output/Slack Create message 4/response/payload'
          - for-each:
              name: For each
              assembly:
                $ref: '#/integration/assemblies/assembly-2'
              source:
                expression: '$IBMWeatherCompanyDataLimitedEditionRetrieveforecasts.aggs '
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: SalesforceRetrieveorders
                    $ref: '#/node-output/Salesforce Retrieve orders/response/payload'
                  - variable: SalesforceRetrieveordersMetadata
                    $ref: '#/node-output/Salesforce Retrieve orders/response'
                  - variable: SlackCreatemessage4
                    $ref: '#/node-output/Slack Create message 4/response/payload'
                  - variable: IBMWeatherCompanyDataLimitedEditionRetrieveforecasts
                    $ref: >-
                      #/node-output/IBM Weather Company Data Limited Edition
                      Retrieve forecasts/response/payload
                  - variable: SlackCreatemessage
                    $ref: '#/node-output/Slack Create message/response/payload'
              mode: sequential
              continue-on-error: true
              map:
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: SalesforceRetrieveorders
                    $ref: '#/node-output/Salesforce Retrieve orders/response/payload'
                  - variable: SalesforceRetrieveordersMetadata
                    $ref: '#/node-output/Salesforce Retrieve orders/response'
                  - variable: SlackCreatemessage4
                    $ref: '#/node-output/Slack Create message 4/response/payload'
                  - variable: IBMWeatherCompanyDataLimitedEditionRetrieveforecasts
                    $ref: >-
                      #/node-output/IBM Weather Company Data Limited Edition
                      Retrieve forecasts/response/payload
                  - variable: SlackCreatemessage
                    $ref: '#/node-output/Slack Create message/response/payload'
                mappings: []
              display-name: IBM Weather Company Data Limited Edition aggs
        tags:
          - incomplete
    assembly-2:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Foreachitem
                  $ref: '#/block/For each/current-item'
                - variable: Trigger
                  $ref: '#/trigger/payload'
                - variable: SalesforceRetrieveorders
                  $ref: '#/node-output/Salesforce Retrieve orders/response/payload'
                - variable: SalesforceRetrieveordersMetadata
                  $ref: '#/node-output/Salesforce Retrieve orders/response'
                - variable: SlackCreatemessage4
                  $ref: '#/node-output/Slack Create message 4/response/payload'
                - variable: IBMWeatherCompanyDataLimitedEditionRetrieveforecasts
                  $ref: >-
                    #/node-output/IBM Weather Company Data Limited Edition
                    Retrieve forecasts/response/payload
                - variable: SlackCreatemessage
                  $ref: '#/node-output/Slack Create message/response/payload'
              branch:
                - condition:
                    and:
                      - '{{$Foreachitem.Date}}': '2020-02-14'
                      - '{{$Foreachitem.Temperature.LOCAL_DAY.max}}':
                          gte: '260'
                  execute:
                    - custom-action:
                        name: Domino Send email
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-5'
                        action: SENDEMAIL
                        map:
                          mappings:
                            - body:
                                template: >-
                                  Order::{{$SalesforceRetrieveorders.OrderNumber}}
                                  is getting delayed due to extreme weather
                                  conditions
                            - input_to:
                                template: test@test.com
                            - subject:
                                template: >-
                                  Update on an Order:
                                  {{$SalesforceRetrieveorders.OrderNumber}} 
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: SlackCreatemessage2
                              $ref: >-
                                #/block/If/node-output/Slack Create message
                                2/response/payload
                            - variable: SalesforceRetrieveorders
                              $ref: >-
                                #/node-output/Salesforce Retrieve
                                orders/response/payload
                            - variable: SalesforceRetrieveordersMetadata
                              $ref: >-
                                #/node-output/Salesforce Retrieve
                                orders/response
                            - variable: SlackCreatemessage4
                              $ref: >-
                                #/node-output/Slack Create message
                                4/response/payload
                            - variable: >-
                                IBMWeatherCompanyDataLimitedEditionRetrieveforecasts
                              $ref: >-
                                #/node-output/IBM Weather Company Data Limited
                                Edition Retrieve forecasts/response/payload
                            - variable: SlackCreatemessage
                              $ref: >-
                                #/node-output/Slack Create
                                message/response/payload
              else:
                execute: []
              output-schema: {}
  name: Retrieve orders from Salesforce and notify customers about any weather dependent delays
models: {}