$integration: http://ibm.com/appconnect/integration/v2/integrationFile
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      type: event-trigger
      triggers:
        CREATED_POLLER:
          input-context:
            data: Ticket
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              createdField: created_at
              updatedField: updated_at
              timeFormat: YYYY-MM-DDTHH:mm:ss.SSSZ
              timeZone: UTC
              pollingInterval: 1
              isCreatedQueryable: true
      connector-type: zendeskservice
  action-interfaces:
    action-interface-2:
      type: api-action
      business-object: DatabaseInstance
      connector-type: amazonrds
      actions:
        STARTDBINSTANCE: {}
    action-interface-1:
      type: api-action
      business-object: DatabaseInstance
      connector-type: amazonrds
      actions:
        STOPDBINSTANCE: {}
    action-interface-3:
      type: api-action
      business-object: DatabaseInstance
      connector-type: amazonrds
      actions:
        REBOOTDBINSTANCE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Trigger
                  $ref: '#/trigger/payload'
                - variable: flowDetails
                  $ref: '#/flowDetails'
              branch:
                - condition:
                    '{{$Trigger.subject}}': START
                  execute:
                    - custom-action:
                        name: Amazon RDS Start database instance
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-2'
                        action: STARTDBINSTANCE
                        map:
                          mappings:
                            - DBInstanceArn:
                                template: '{{$Trigger.ticket_fields.id__10425747441305}}'
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: SlackSendmessage
                              $ref: >-
                                #/node-output/Slack Send
                                message/response/payload
                            - variable: flowDetails
                              $ref: '#/flowDetails'
                - condition:
                    '{{$Trigger.subject}}': STOP
                  execute:
                    - custom-action:
                        name: Amazon RDS Stop database instance
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-1'
                        action: STOPDBINSTANCE
                        map:
                          mappings:
                            - DBInstanceArn:
                                template: '{{$Trigger.ticket_fields.id__10425747441305}}'
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: SlackSendmessage
                              $ref: >-
                                #/node-output/Slack Send
                                message/response/payload
                            - variable: flowDetails
                              $ref: '#/flowDetails'
              else:
                execute:
                  - custom-action:
                      name: Amazon RDS Reboot database instance
                      target:
                        $ref: '#/integration/action-interfaces/action-interface-3'
                      action: REBOOTDBINSTANCE
                      map:
                        mappings:
                          - DBInstanceArn:
                              template: '{{$Trigger.ticket_fields.id__10425747441305}}'
                        $map: http://ibm.com/appconnect/map/v1
                        input:
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                          - variable: SlackSendmessage
                            $ref: '#/node-output/Slack Send message/response/payload'
                          - variable: flowDetails
                            $ref: '#/flowDetails'
              output-schema: {}
  name: Stop or start or reboot the Amazon RDS instance whenever a Zendesk Service ticket gets created
  description: Use this template to stop, start, or reboot the Amazon RDS instance whenever a Zendesk Service ticket gets created.
models: {}
