$integration: 'http://ibm.com/appconnect/integration/v2/integrationFile'
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      type: event-trigger
      triggers:
        SCHEDULE:
          input-context:
            data: scheduler
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              scheduleConfiguration:
                calendar:
                  cronExp: 00 09 * * *
                  runOnceOncheck: false
                  timeZone: Europe/London
                  every: day
      connector-type: streaming-connector-scheduler
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: request
      connector-type: http
      actions:
        INVOKE: {}
    action-interface-3:
      type: api-action
      business-object: request
      connector-type: http
      actions:
        INVOKE: {}
    action-interface-2:
      type: api-action
      business-object: request
      connector-type: http
      actions:
        INVOKE: {}
    action-interface-4:
      type: api-action
      business-object: request
      connector-type: http
      actions:
        INVOKE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Trigger
                  $ref: '#/trigger/payload'
              branch:
                - condition:
                    or:
                      - '{{$formatDate($millis(), "dddd", "UTC")}}': Saturday
                      - '{{$formatDate($millis(), "dddd", "UTC")}}': Sunday
                  execute: []
                  completion-action:
                    terminate:
                      info:
                        input:
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                        message: It's the weekend!  No one is in the office today.
                        status-code: 200
              else:
                execute:
                  - logging:
                      name: Log
                      map:
                        $map: 'http://ibm.com/appconnect/map/v1'
                        input:
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                        mappings:
                          - logLevel:
                              template: Info
                          - logMessage:
                              template: >-
                                It's {{$formatDate($millis(), "dddd", "UTC")}}
                                - Checking who is on call.
              output-schema: {}
          - custom-action:
              name: HTTP Invoke method
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              action: INVOKE
              map:
                customSchemas:
                  properties.`requestHeaders`:
                    type: object
                    properties:
                      Accept:
                        type: string
                      Authorization:
                        type: string
                mappings:
                  - continue2xx:
                      expression: 'false'
                  - method:
                      template: GET
                  - requestHeaders:
                      mappings:
                        - Accept:
                            template: application/vnd.pagerduty+json;version=2
                        - Authorization:
                            template: Token token=
                  - url:
                      template: >-
                        https://api.pagerduty.com/oncalls?time_zone=UTC&include%5B%5D=users&schedule_ids%5B%5D=&earliest=true
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
          - parse:
              name: JSON Parser Parse
              parse-format: json
              source:
                template: '{{$HTTPInvokemethod.responseBody}}'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
              sample-data: ''
              output-schema:
                $schema: 'http://json-schema.org/draft-04/schema#'
                type: object
                properties:
                  oncalls:
                    type: array
                    items:
                      type: object
                      properties:
                        escalation_policy:
                          type: object
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                            summary:
                              type: string
                            self:
                              type: string
                            html_url:
                              type: string
                        escalation_level:
                          type: number
                        schedule:
                          type: object
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                            summary:
                              type: string
                            self:
                              type: string
                            html_url:
                              type: string
                        user:
                          type: object
                          properties:
                            name:
                              type: string
                            email:
                              type: string
                            time_zone:
                              type: string
                            color:
                              type: string
                            avatar_url:
                              type: string
                            billed:
                              type: boolean
                            role:
                              type: string
                            description:
                              type: 'null'
                            invitation_sent:
                              type: boolean
                            job_title:
                              type: 'null'
                            teams:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                  summary:
                                    type: string
                                  self:
                                    type: string
                                  html_url:
                                    type: string
                            contact_methods:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                  summary:
                                    type: string
                                  self:
                                    type: string
                                  html_url:
                                    type: 'null'
                            notification_rules:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                  summary:
                                    type: string
                                  self:
                                    type: string
                                  html_url:
                                    type: 'null'
                            coordinated_incidents:
                              type: array
                              items: {}
                            id:
                              type: string
                            type:
                              type: string
                            summary:
                              type: string
                            self:
                              type: string
                            html_url:
                              type: string
                        start:
                          type: string
                        end:
                          type: string
                  limit:
                    type: number
                  offset:
                    type: number
                  more:
                    type: boolean
                  total:
                    type: 'null'
                title: Parsed JSON
          - logging:
              name: Log 2
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: >-
                        {{$JSONParserParse.oncalls.user.name}} is on shift.
                        Finding out their Slack username.
          - custom-action:
              name: HTTP Invoke method 2
              target:
                $ref: '#/integration/action-interfaces/action-interface-3'
              action: INVOKE
              map:
                customSchemas:
                  properties.`requestHeaders`:
                    type: object
                    properties:
                      Accept:
                        type: string
                mappings:
                  - continue2xx:
                      expression: 'false'
                  - method:
                      template: GET
                  - requestHeaders:
                      mappings:
                        - Accept:
                            template: application/x-www-form-urlencoded
                  - url:
                      template: >-
                        https://my-company.slack.com/api/users.lookupByEmail?token=&email={{$JSONParserParse.oncalls.user.email}}
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
          - parse:
              name: JSON Parser Parse 2
              parse-format: json
              source:
                template: '{{$HTTPInvokemethod2.responseBody}}'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                  - variable: HTTPInvokemethod2
                    $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                  - variable: HTTPInvokemethod2Metadata
                    $ref: '#/node-output/HTTP Invoke method 2/response'
              sample-data: ''
              output-schema:
                $schema: 'http://json-schema.org/draft-04/schema#'
                type: object
                properties:
                  ok:
                    type: boolean
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      team_id:
                        type: string
                      name:
                        type: string
                      deleted:
                        type: boolean
                      color:
                        type: string
                      real_name:
                        type: string
                      tz:
                        type: string
                      tz_label:
                        type: string
                      tz_offset:
                        type: number
                      profile:
                        type: object
                        properties:
                          avatar_hash:
                            type: string
                          status_text:
                            type: string
                          status_emoji:
                            type: string
                          real_name:
                            type: string
                          display_name:
                            type: string
                          real_name_normalized:
                            type: string
                          display_name_normalized:
                            type: string
                          email:
                            type: string
                          image_24:
                            type: string
                          image_32:
                            type: string
                          image_48:
                            type: string
                          image_72:
                            type: string
                          image_192:
                            type: string
                          image_512:
                            type: string
                          team:
                            type: string
                      is_admin:
                        type: boolean
                      is_owner:
                        type: boolean
                      is_primary_owner:
                        type: boolean
                      is_restricted:
                        type: boolean
                      is_ultra_restricted:
                        type: boolean
                      is_bot:
                        type: boolean
                      updated:
                        type: number
                      is_app_user:
                        type: boolean
                      has_2fa:
                        type: boolean
                title: Parsed JSON
          - logging:
              name: Log 3
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                  - variable: HTTPInvokemethod2
                    $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                  - variable: HTTPInvokemethod2Metadata
                    $ref: '#/node-output/HTTP Invoke method 2/response'
                  - variable: JSONParserParse2
                    $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: >-
                        Adding {{$JSONParserParse2.user.name}} to Slack group
                        @slack-group-name
          - custom-action:
              name: HTTP Invoke method 3
              target:
                $ref: '#/integration/action-interfaces/action-interface-2'
              action: INVOKE
              map:
                customSchemas: {}
                mappings:
                  - continue2xx:
                      expression: 'false'
                  - method:
                      template: POST
                  - url:
                      template: >-
                        https://my-company.slack.com/api/usergroups.users.update?token=&usergroup=&users={{$JSONParserParse2.user.id}}
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                  - variable: HTTPInvokemethod2
                    $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                  - variable: HTTPInvokemethod2Metadata
                    $ref: '#/node-output/HTTP Invoke method 2/response'
                  - variable: JSONParserParse2
                    $ref: '#/node-output/JSON Parser Parse 2/response/payload'
          - logging:
              name: Log 4
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                  - variable: HTTPInvokemethod2
                    $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                  - variable: HTTPInvokemethod2Metadata
                    $ref: '#/node-output/HTTP Invoke method 2/response'
                  - variable: JSONParserParse2
                    $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                  - variable: HTTPInvokemethod3
                    $ref: '#/node-output/HTTP Invoke method 3/response/payload'
                  - variable: HTTPInvokemethod3Metadata
                    $ref: '#/node-output/HTTP Invoke method 3/response'
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: Updating Slack channel topic with callout details.
          - custom-action:
              name: HTTP Invoke method 4
              target:
                $ref: '#/integration/action-interfaces/action-interface-4'
              action: INVOKE
              map:
                customSchemas: {}
                mappings:
                  - continue2xx:
                      expression: 'false'
                  - method:
                      template: POST
                  - url:
                      template: >-
                        https://my-company.slack.com/api/channels.setTopic?token=&channel=&topic=@{{$JSONParserParse2.user.name}}
                        is on call - contact via @slack-group-name
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                  - variable: HTTPInvokemethod2
                    $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                  - variable: HTTPInvokemethod2Metadata
                    $ref: '#/node-output/HTTP Invoke method 2/response'
                  - variable: JSONParserParse2
                    $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                  - variable: HTTPInvokemethod3
                    $ref: '#/node-output/HTTP Invoke method 3/response/payload'
                  - variable: HTTPInvokemethod3Metadata
                    $ref: '#/node-output/HTTP Invoke method 3/response'
          - logging:
              name: Log 5
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                  - variable: HTTPInvokemethod2
                    $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                  - variable: HTTPInvokemethod2Metadata
                    $ref: '#/node-output/HTTP Invoke method 2/response'
                  - variable: JSONParserParse2
                    $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                  - variable: HTTPInvokemethod3
                    $ref: '#/node-output/HTTP Invoke method 3/response/payload'
                  - variable: HTTPInvokemethod3Metadata
                    $ref: '#/node-output/HTTP Invoke method 3/response'
                  - variable: HTTPInvokemethod4
                    $ref: '#/node-output/HTTP Invoke method 4/response/payload'
                  - variable: HTTPInvokemethod4Metadata
                    $ref: '#/node-output/HTTP Invoke method 4/response'
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: Slack topic successfully set!
  name: Get PagerDuty schedule then update Slack group and topic
models: {}
