$integration: http://ibm.com/appconnect/integration/v2/integrationFile
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      type: event-trigger
      triggers:
        SCHEDULE:
          input-context:
            data: scheduler
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              scheduleConfiguration:
                interval:
                  unit: minute
                  value: 1
                  runOnceOncheck: true
                  days:
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
                    - SUN
                  timeZone: UTC
      connector-type: streaming-connector-scheduler
  action-interfaces:
    action-interface-2:
      type: api-action
      business-object: getCandidates_model
      connector-type: zohorecruit
      actions:
        RETRIEVEALL: {}
    action-interface-3:
      type: api-action
      business-object: organizationInvitation
      connector-type: calendly
      actions:
        CREATE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - retrieve-action:
              name: Zoho Recruit Retrieve candidates by advanced filters
              target:
                $ref: '#/integration/action-interfaces/action-interface-2'
              filter:
                where:
                  Updated_On:
                    gt: '{{$Trigger.lastEventTime}}'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
                limit: 1000
              allow-truncation: true
              pagination-type: SKIP_LIMIT
              allow-empty-output: true
          - for-each:
              name: For each
              assembly:
                $ref: '#/integration/assemblies/assembly-2'
              source:
                expression: '$ZohoRecruitRetrievecandidatesbyadvancedfilters '
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
              mode: sequential
              continue-on-error: true
              map:
                $map: http://ibm.com/appconnect/map/v1
                mappings: []
              display-name: Zoho Recruit Candidates
    assembly-2:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Trigger
                  $ref: '#/trigger/payload'
                - variable: Foreachitem
                  $ref: '#/block/For each/current-item'
                - variable: flowDetails
                  $ref: '#/flowDetails'
              branch:
                - condition:
                    '{{$Foreachitem.Candidate_Status}}': Forward-to-Onboarding
                  execute:
                    - create-action:
                        name: Calendly Create organization invitation
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-3'
                        map:
                          mappings:
                            - email:
                                template: '{{$Foreachitem.Email}}'
                          $map: http://ibm.com/appconnect/map/v1
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: flowDetails
                              $ref: '#/flowDetails'
              else:
                execute: []
              output-schema: {}
  name: Send invitation to the selected candidate from Zoho Recruit to join an organization through Calendly
models: {}
