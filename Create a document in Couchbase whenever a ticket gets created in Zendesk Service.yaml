$integration: http://ibm.com/appconnect/integration/v2/integrationFile
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      connector-type: zendeskservice
      type: event-trigger
      triggers:
        CREATED_POLLER:
          input-context:
            data: Ticket
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              createdField: created_at
              updatedField: updated_at
              timeFormat: YYYY-MM-DDTHH:mm:ss.SSSZ
              timeZone: UTC
              pollingInterval: 1
              isCreatedQueryable: true
  action-interfaces:
    action-interface-7:
      type: api-action
      business-object: message
      connector-type: slack
      actions:
        CREATE: {}
    action-interface-1:
      type: api-action
      business-object: Document
      connector-type: couchbase
      actions:
        CREATE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - create-action:
              name: Couchbase Create document
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              map:
                customSchemas:
                  properties.`documentData`:
                    type: object
                    properties:
                      Subject:
                        type: string
                      Description:
                        type: string
                      Tags:
                        type: string
                      Priority:
                        type: string
                      Type:
                        type: string
                      Assignee_ID:
                        type: number
                      Requester_ID:
                        type: string
                mappings:
                  - BucketNameVal:
                      template: tickets
                  - CollectionNameVal:
                      template: ZdskTickets
                  - ScopeNameVal:
                      template: ZendeskScope
                  - Ticket:
                      template: '{{$Trigger.id}}'
                  - documentData:
                      mappings:
                        - Assignee_ID:
                            expression: '$Trigger.assignee_id '
                        - Description:
                            template: '{{$Trigger.description}}'
                        - Priority:
                            template: '{{$Trigger.priority}}'
                        - Requester_ID:
                            template: '{{$Trigger.requester_id}}'
                        - Subject:
                            template: '{{$Trigger.subject}}'
                        - Tags:
                            template: '{{$Trigger.tags}}'
                        - Type:
                            template: '{{$Trigger.type}}'
                  - documentId:
                      template: '{{$Trigger.id}}'
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: SlackSendmessage
                    $ref: '#/node-output/Slack Send message/response/payload'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
          - create-action:
              name: Slack Send message 4
              target:
                $ref: '#/integration/action-interfaces/action-interface-7'
              map:
                mappings:
                  - OBJECT_ID:
                      template: C03FZSRMWRJ
                  - OBJECT_NAME:
                      template: channel
                  - text:
                      template: >-
                        The zendesk ticket {{$Trigger.id}} is inserted to
                        collection of couchbase with record id as
                        {{$CouchbaseCreatedocument.documentId}}.
                $map: http://ibm.com/appconnect/map/v1
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: SlackSendmessage
                    $ref: '#/node-output/Slack Send message/response/payload'
                  - variable: CouchbaseCreatedocument
                    $ref: '#/node-output/Couchbase Create document/response/payload'
                  - variable: flowDetails
                    $ref: '#/flowDetails'
  name: Create a document in Couchbase whenever a ticket gets created in Zendesk Service
  description: >-
    Use this template to create a document in Couchbase with the specified document data whenever a ticket is created in Zendesk Service. A Slack message is then sent to the intended channel.
models: {}
